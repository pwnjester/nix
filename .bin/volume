#!/usr/bin/env bash
#
if [[ -n $2 ]]; then
  _sink=$2
else
  _sink=@DEFAULT_AUDIO_SINK@
fi

_timeout=500
_volume=$(wpctl get-volume "${_sink}")

down() {
  if echo ${_volume} | grep -q '[MUTED]'; then
    notify-send -t "${_timeout}" "  You're MUTED"
  else 
	  wpctl set-volume "${_sink}" 5%-
	  _volume=$(wpctl get-volume "${_sink}" | grep -Eo "[0-9]+\.[0-9]+" | awk '{print $1 * 100}')
	  notify-send -t "${_timeout}" "  Volume: ${_volume}%"
  fi
}

up() {
  if echo ${_volume} | grep -q '[MUTED]'; then
    notify-send -t "${_timeout}" "  You're MUTED"
  else 
	  wpctl set-volume -l 1.0 "${_sink}" 5%+
	  _volume=$(wpctl get-volume "${_sink}" | grep -Eo "[0-9]+\.[0-9]+" | awk '{print $1 * 100}')
	  notify-send -t "${_timeout}" "  Volume: ${_volume}%"
  fi
}

mute() {
	_muted="$(wpctl get-volume ${_sink})"
	if echo ${_muted} | grep -q '[MUTED]'; then
		notify-send -t "${_timeout}" "  UNMUTED"
	else
		notify-send -t "${_timeout}" "  MUTED"
	fi
  wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle 
}

help() {
  local _usage
	_usage="volume 0.1.0 by h4rl

A script for changing volume, custom sink, notification daemon and timeout support,
requires libnotify, wpctl, awk and grep.

usage
volume up: increases volume by 5

volume down: decreases volume by 5

volume mute: mutes the sink

volume: shows this message

"
	echo "${_usage}"
}

case "$1" in
up) up ;;
down) down ;;
mute) mute ;;
*) help ;;
esac
